// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TableRowComponent Should render pagination row component 1`] = `
<ul
  className="ant-pagination"
  data-testid="pagination"
  style={Object {}}
  unselectable="unselectable"
>
  <li
    aria-disabled={true}
    className="ant-pagination-prev ant-pagination-disabled"
    onClick={[Function]}
    onKeyPress={[Function]}
    tabIndex={null}
    title="Previous Page"
  >
    <button
      className="ant-pagination-item-link"
      disabled={true}
      tabIndex={-1}
      type="button"
    >
      <span
        aria-label="left"
        className="anticon anticon-left"
        role="img"
      >
        <svg
          aria-hidden="true"
          data-icon="left"
          fill="currentColor"
          focusable="false"
          height="1em"
          viewBox="64 64 896 896"
          width="1em"
        >
          <path
            d="M724 218.3V141c0-6.7-7.7-10.4-12.9-6.3L260.3 486.8a31.86 31.86 0 000 50.3l450.8 352.1c5.3 4.1 12.9.4 12.9-6.3v-77.3c0-4.9-2.3-9.6-6.1-12.6l-360-281 360-281.1c3.8-3 6.1-7.7 6.1-12.6z"
          />
        </svg>
      </span>
    </button>
  </li>
  <li
    className="ant-pagination-item ant-pagination-item-1 ant-pagination-item-active"
    onClick={[Function]}
    onKeyPress={[Function]}
    tabIndex="0"
    title={1}
  >
    <a
      rel="nofollow"
    >
      1
    </a>
  </li>
  <li
    aria-disabled={true}
    className="ant-pagination-next ant-pagination-disabled"
    onClick={[Function]}
    onKeyPress={[Function]}
    tabIndex={null}
    title="Next Page"
  >
    <button
      className="ant-pagination-item-link"
      disabled={true}
      tabIndex={-1}
      type="button"
    >
      <span
        aria-label="right"
        className="anticon anticon-right"
        role="img"
      >
        <svg
          aria-hidden="true"
          data-icon="right"
          fill="currentColor"
          focusable="false"
          height="1em"
          viewBox="64 64 896 896"
          width="1em"
        >
          <path
            d="M765.7 486.8L314.9 134.7A7.97 7.97 0 00302 141v77.3c0 4.9 2.3 9.6 6.1 12.6l360 281.1-360 281.1c-3.9 3-6.1 7.7-6.1 12.6V883c0 6.7 7.7 10.4 12.9 6.3l450.8-352.1a31.96 31.96 0 000-50.4z"
          />
        </svg>
      </span>
    </button>
  </li>
  <li
    className="ant-pagination-options"
  >
    <div
      className="ant-select ant-pagination-options-size-changer ant-select-single ant-select-show-arrow"
      onBlur={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      onKeyUp={[Function]}
      onMouseDown={[Function]}
    >
      <div
        className="ant-select-selector"
        onClick={[Function]}
        onMouseDown={[Function]}
      >
        <span
          className="ant-select-selection-search"
        >
          <input
            aria-activedescendant="undefined_list_0"
            aria-autocomplete="list"
            aria-controls="undefined_list"
            aria-haspopup="listbox"
            aria-owns="undefined_list"
            autoComplete="off"
            className="ant-select-selection-search-input"
            onChange={[Function]}
            onCompositionEnd={[Function]}
            onCompositionStart={[Function]}
            onKeyDown={[Function]}
            onMouseDown={[Function]}
            onPaste={[Function]}
            readOnly={true}
            role="combobox"
            style={
              Object {
                "opacity": 0,
              }
            }
            type="search"
            unselectable="on"
            value=""
          />
        </span>
        <span
          className="ant-select-selection-item"
          title="100 / page"
        >
          100 / page
        </span>
      </div>
      <span
        aria-hidden={true}
        className="ant-select-arrow"
        onMouseDown={[Function]}
        style={
          Object {
            "WebkitUserSelect": "none",
            "userSelect": "none",
          }
        }
        unselectable="on"
      >
        <span
          aria-label="down"
          className="anticon anticon-down ant-select-suffix"
          role="img"
        >
          <svg
            aria-hidden="true"
            data-icon="down"
            fill="currentColor"
            focusable="false"
            height="1em"
            viewBox="64 64 896 896"
            width="1em"
          >
            <path
              d="M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z"
            />
          </svg>
        </span>
      </span>
    </div>
  </li>
</ul>
`;

exports[`TableRowComponent Should render pagination with 500 of elements 1`] = `
<ul
  className="ant-pagination"
  data-testid="pagination"
  style={Object {}}
  unselectable="unselectable"
>
  <li
    aria-disabled={true}
    className="ant-pagination-prev ant-pagination-disabled"
    onClick={[Function]}
    onKeyPress={[Function]}
    tabIndex={null}
    title="Previous Page"
  >
    <button
      className="ant-pagination-item-link"
      disabled={true}
      tabIndex={-1}
      type="button"
    >
      <span
        aria-label="left"
        className="anticon anticon-left"
        role="img"
      >
        <svg
          aria-hidden="true"
          data-icon="left"
          fill="currentColor"
          focusable="false"
          height="1em"
          viewBox="64 64 896 896"
          width="1em"
        >
          <path
            d="M724 218.3V141c0-6.7-7.7-10.4-12.9-6.3L260.3 486.8a31.86 31.86 0 000 50.3l450.8 352.1c5.3 4.1 12.9.4 12.9-6.3v-77.3c0-4.9-2.3-9.6-6.1-12.6l-360-281 360-281.1c3.8-3 6.1-7.7 6.1-12.6z"
          />
        </svg>
      </span>
    </button>
  </li>
  <li
    className="ant-pagination-item ant-pagination-item-1 ant-pagination-item-active"
    onClick={[Function]}
    onKeyPress={[Function]}
    tabIndex="0"
    title={1}
  >
    <a
      rel="nofollow"
    >
      1
    </a>
  </li>
  <li
    className="ant-pagination-item ant-pagination-item-2"
    onClick={[Function]}
    onKeyPress={[Function]}
    tabIndex="0"
    title={2}
  >
    <a
      rel="nofollow"
    >
      2
    </a>
  </li>
  <li
    className="ant-pagination-item ant-pagination-item-3"
    onClick={[Function]}
    onKeyPress={[Function]}
    tabIndex="0"
    title={3}
  >
    <a
      rel="nofollow"
    >
      3
    </a>
  </li>
  <li
    className="ant-pagination-item ant-pagination-item-4"
    onClick={[Function]}
    onKeyPress={[Function]}
    tabIndex="0"
    title={4}
  >
    <a
      rel="nofollow"
    >
      4
    </a>
  </li>
  <li
    className="ant-pagination-item ant-pagination-item-5"
    onClick={[Function]}
    onKeyPress={[Function]}
    tabIndex="0"
    title={5}
  >
    <a
      rel="nofollow"
    >
      5
    </a>
  </li>
  <li
    aria-disabled={false}
    className="ant-pagination-next"
    onClick={[Function]}
    onKeyPress={[Function]}
    tabIndex={0}
    title="Next Page"
  >
    <button
      className="ant-pagination-item-link"
      disabled={false}
      tabIndex={-1}
      type="button"
    >
      <span
        aria-label="right"
        className="anticon anticon-right"
        role="img"
      >
        <svg
          aria-hidden="true"
          data-icon="right"
          fill="currentColor"
          focusable="false"
          height="1em"
          viewBox="64 64 896 896"
          width="1em"
        >
          <path
            d="M765.7 486.8L314.9 134.7A7.97 7.97 0 00302 141v77.3c0 4.9 2.3 9.6 6.1 12.6l360 281.1-360 281.1c-3.9 3-6.1 7.7-6.1 12.6V883c0 6.7 7.7 10.4 12.9 6.3l450.8-352.1a31.96 31.96 0 000-50.4z"
          />
        </svg>
      </span>
    </button>
  </li>
  <li
    className="ant-pagination-options"
  >
    <div
      className="ant-select ant-pagination-options-size-changer ant-select-single ant-select-show-arrow"
      onBlur={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      onKeyUp={[Function]}
      onMouseDown={[Function]}
    >
      <div
        className="ant-select-selector"
        onClick={[Function]}
        onMouseDown={[Function]}
      >
        <span
          className="ant-select-selection-search"
        >
          <input
            aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
            aria-autocomplete="list"
            aria-controls="rc_select_TEST_OR_SSR_list"
            aria-haspopup="listbox"
            aria-owns="rc_select_TEST_OR_SSR_list"
            autoComplete="off"
            className="ant-select-selection-search-input"
            id="rc_select_TEST_OR_SSR"
            onChange={[Function]}
            onCompositionEnd={[Function]}
            onCompositionStart={[Function]}
            onKeyDown={[Function]}
            onMouseDown={[Function]}
            onPaste={[Function]}
            readOnly={true}
            role="combobox"
            style={
              Object {
                "opacity": 0,
              }
            }
            type="search"
            unselectable="on"
            value=""
          />
        </span>
        <span
          className="ant-select-selection-item"
          title="100 / page"
        >
          100 / page
        </span>
      </div>
      <span
        aria-hidden={true}
        className="ant-select-arrow"
        onMouseDown={[Function]}
        style={
          Object {
            "WebkitUserSelect": "none",
            "userSelect": "none",
          }
        }
        unselectable="on"
      >
        <span
          aria-label="down"
          className="anticon anticon-down ant-select-suffix"
          role="img"
        >
          <svg
            aria-hidden="true"
            data-icon="down"
            fill="currentColor"
            focusable="false"
            height="1em"
            viewBox="64 64 896 896"
            width="1em"
          >
            <path
              d="M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z"
            />
          </svg>
        </span>
      </span>
    </div>
  </li>
</ul>
`;

exports[`TableRowComponent Should simulate on Change Event 1`] = `
<ul
  className="ant-pagination"
  data-testid="pagination"
  style={Object {}}
  unselectable="unselectable"
>
  <li
    aria-disabled={false}
    className="ant-pagination-prev"
    onClick={[Function]}
    onKeyPress={[Function]}
    tabIndex={0}
    title="Previous Page"
  >
    <button
      className="ant-pagination-item-link"
      disabled={false}
      tabIndex={-1}
      type="button"
    >
      <span
        aria-label="left"
        className="anticon anticon-left"
        role="img"
      >
        <svg
          aria-hidden="true"
          data-icon="left"
          fill="currentColor"
          focusable="false"
          height="1em"
          viewBox="64 64 896 896"
          width="1em"
        >
          <path
            d="M724 218.3V141c0-6.7-7.7-10.4-12.9-6.3L260.3 486.8a31.86 31.86 0 000 50.3l450.8 352.1c5.3 4.1 12.9.4 12.9-6.3v-77.3c0-4.9-2.3-9.6-6.1-12.6l-360-281 360-281.1c3.8-3 6.1-7.7 6.1-12.6z"
          />
        </svg>
      </span>
    </button>
  </li>
  <li
    className="ant-pagination-item ant-pagination-item-1"
    onClick={[Function]}
    onKeyPress={[Function]}
    tabIndex="0"
    title={1}
  >
    <a
      rel="nofollow"
    >
      1
    </a>
  </li>
  <li
    className="ant-pagination-item ant-pagination-item-2"
    onClick={[Function]}
    onKeyPress={[Function]}
    tabIndex="0"
    title={2}
  >
    <a
      rel="nofollow"
    >
      2
    </a>
  </li>
  <li
    className="ant-pagination-item ant-pagination-item-3"
    onClick={[Function]}
    onKeyPress={[Function]}
    tabIndex="0"
    title={3}
  >
    <a
      rel="nofollow"
    >
      3
    </a>
  </li>
  <li
    className="ant-pagination-item ant-pagination-item-4 ant-pagination-item-active"
    onClick={[Function]}
    onKeyPress={[Function]}
    tabIndex="0"
    title={4}
  >
    <a
      rel="nofollow"
    >
      4
    </a>
  </li>
  <li
    className="ant-pagination-item ant-pagination-item-5"
    onClick={[Function]}
    onKeyPress={[Function]}
    tabIndex="0"
    title={5}
  >
    <a
      rel="nofollow"
    >
      5
    </a>
  </li>
  <li
    className="ant-pagination-item ant-pagination-item-6 ant-pagination-item-before-jump-next"
    onClick={[Function]}
    onKeyPress={[Function]}
    tabIndex="0"
    title={6}
  >
    <a
      rel="nofollow"
    >
      6
    </a>
  </li>
  <li
    className="ant-pagination-jump-next ant-pagination-jump-next-custom-icon"
    onClick={[Function]}
    onKeyPress={[Function]}
    tabIndex="0"
    title="Next 5 Pages"
  >
    <a
      className="ant-pagination-item-link"
    >
      <div
        className="ant-pagination-item-container"
      >
        <span
          aria-label="double-right"
          className="anticon anticon-double-right ant-pagination-item-link-icon"
          role="img"
        >
          <svg
            aria-hidden="true"
            data-icon="double-right"
            fill="currentColor"
            focusable="false"
            height="1em"
            viewBox="64 64 896 896"
            width="1em"
          >
            <path
              d="M533.2 492.3L277.9 166.1c-3-3.9-7.7-6.1-12.6-6.1H188c-6.7 0-10.4 7.7-6.3 12.9L447.1 512 181.7 851.1A7.98 7.98 0 00188 864h77.3c4.9 0 9.6-2.3 12.6-6.1l255.3-326.1c9.1-11.7 9.1-27.9 0-39.5zm304 0L581.9 166.1c-3-3.9-7.7-6.1-12.6-6.1H492c-6.7 0-10.4 7.7-6.3 12.9L751.1 512 485.7 851.1A7.98 7.98 0 00492 864h77.3c4.9 0 9.6-2.3 12.6-6.1l255.3-326.1c9.1-11.7 9.1-27.9 0-39.5z"
            />
          </svg>
        </span>
        <span
          className="ant-pagination-item-ellipsis"
        >
          •••
        </span>
      </div>
    </a>
  </li>
  <li
    className="ant-pagination-item ant-pagination-item-39"
    onClick={[Function]}
    onKeyPress={[Function]}
    tabIndex="0"
    title={39}
  >
    <a
      rel="nofollow"
    >
      39
    </a>
  </li>
  <li
    aria-disabled={false}
    className="ant-pagination-next"
    onClick={[Function]}
    onKeyPress={[Function]}
    tabIndex={0}
    title="Next Page"
  >
    <button
      className="ant-pagination-item-link"
      disabled={false}
      tabIndex={-1}
      type="button"
    >
      <span
        aria-label="right"
        className="anticon anticon-right"
        role="img"
      >
        <svg
          aria-hidden="true"
          data-icon="right"
          fill="currentColor"
          focusable="false"
          height="1em"
          viewBox="64 64 896 896"
          width="1em"
        >
          <path
            d="M765.7 486.8L314.9 134.7A7.97 7.97 0 00302 141v77.3c0 4.9 2.3 9.6 6.1 12.6l360 281.1-360 281.1c-3.9 3-6.1 7.7-6.1 12.6V883c0 6.7 7.7 10.4 12.9 6.3l450.8-352.1a31.96 31.96 0 000-50.4z"
          />
        </svg>
      </span>
    </button>
  </li>
  <li
    className="ant-pagination-options"
  >
    <div
      className="ant-select ant-pagination-options-size-changer ant-select-single ant-select-show-arrow"
      onBlur={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      onKeyUp={[Function]}
      onMouseDown={[Function]}
    >
      <div
        className="ant-select-selector"
        onClick={[Function]}
        onMouseDown={[Function]}
      >
        <span
          className="ant-select-selection-search"
        >
          <input
            aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
            aria-autocomplete="list"
            aria-controls="rc_select_TEST_OR_SSR_list"
            aria-haspopup="listbox"
            aria-owns="rc_select_TEST_OR_SSR_list"
            autoComplete="off"
            className="ant-select-selection-search-input"
            id="rc_select_TEST_OR_SSR"
            onChange={[Function]}
            onCompositionEnd={[Function]}
            onCompositionStart={[Function]}
            onKeyDown={[Function]}
            onMouseDown={[Function]}
            onPaste={[Function]}
            readOnly={true}
            role="combobox"
            style={
              Object {
                "opacity": 0,
              }
            }
            type="search"
            unselectable="on"
            value=""
          />
        </span>
        <span
          className="ant-select-selection-item"
          title="100 / page"
        >
          100 / page
        </span>
      </div>
      <span
        aria-hidden={true}
        className="ant-select-arrow"
        onMouseDown={[Function]}
        style={
          Object {
            "WebkitUserSelect": "none",
            "userSelect": "none",
          }
        }
        unselectable="on"
      >
        <span
          aria-label="down"
          className="anticon anticon-down ant-select-suffix"
          role="img"
        >
          <svg
            aria-hidden="true"
            data-icon="down"
            fill="currentColor"
            focusable="false"
            height="1em"
            viewBox="64 64 896 896"
            width="1em"
          >
            <path
              d="M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z"
            />
          </svg>
        </span>
      </span>
    </div>
  </li>
</ul>
`;

exports[`TableRowComponent Should simulate on Click Button 1`] = `
<PaginationRow
  count={3900}
  current={4}
  onClickParent={
    [MockFunction] {
      "calls": Array [
        Array [
          2,
          100,
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": Object {
            "page": undefined,
            "pageSize": undefined,
          },
        },
      ],
    }
  }
>
  <Pagination
    data-testid="pagination"
    defaultCurrent={4}
    defaultPageSize={100}
    onChange={[Function]}
    total={3900}
  >
    <LocaleReceiver
      componentName="Pagination"
      defaultLocale={
        Object {
          "items_per_page": "/ page",
          "jump_to": "Go to",
          "jump_to_confirm": "confirm",
          "next_3": "Next 3 Pages",
          "next_5": "Next 5 Pages",
          "next_page": "Next Page",
          "page": "",
          "prev_3": "Previous 3 Pages",
          "prev_5": "Previous 5 Pages",
          "prev_page": "Previous Page",
        }
      }
    >
      <Pagination
        className=""
        data-testid="pagination"
        defaultCurrent={4}
        defaultPageSize={100}
        hideOnSinglePage={false}
        itemRender={[Function]}
        jumpNextIcon={
          <a
            className="ant-pagination-item-link"
          >
            <div
              className="ant-pagination-item-container"
            >
              <ForwardRef(DoubleRightOutlined)
                className="ant-pagination-item-link-icon"
              />
              <span
                className="ant-pagination-item-ellipsis"
              >
                •••
              </span>
            </div>
          </a>
        }
        jumpPrevIcon={
          <a
            className="ant-pagination-item-link"
          >
            <div
              className="ant-pagination-item-container"
            >
              <ForwardRef(DoubleLeftOutlined)
                className="ant-pagination-item-link-icon"
              />
              <span
                className="ant-pagination-item-ellipsis"
              >
                •••
              </span>
            </div>
          </a>
        }
        locale={
          Object {
            "items_per_page": "/ page",
            "jump_to": "Go to",
            "jump_to_confirm": "confirm",
            "next_3": "Next 3 Pages",
            "next_5": "Next 5 Pages",
            "next_page": "Next Page",
            "page": "",
            "prev_3": "Previous 3 Pages",
            "prev_5": "Previous 5 Pages",
            "prev_page": "Previous Page",
          }
        }
        nextIcon={
          <button
            className="ant-pagination-item-link"
            tabIndex={-1}
            type="button"
          >
            <ForwardRef(RightOutlined) />
          </button>
        }
        onChange={[Function]}
        onShowSizeChange={[Function]}
        prefixCls="ant-pagination"
        prevIcon={
          <button
            className="ant-pagination-item-link"
            tabIndex={-1}
            type="button"
          >
            <ForwardRef(LeftOutlined) />
          </button>
        }
        selectComponentClass={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "OptGroup": [Function],
            "Option": [Function],
            "SECRET_COMBOBOX_MODE_DO_NOT_USE": "SECRET_COMBOBOX_MODE_DO_NOT_USE",
            "render": [Function],
          }
        }
        selectPrefixCls="ant-select"
        showLessItems={false}
        showPrevNextJumpers={true}
        showQuickJumper={false}
        showTitle={true}
        style={Object {}}
        total={3900}
        totalBoundaryShowSizeChanger={50}
      >
        <ul
          className="ant-pagination"
          data-testid="pagination"
          style={Object {}}
          unselectable="unselectable"
        >
          <li
            aria-disabled={false}
            className="ant-pagination-prev"
            onClick={[Function]}
            onKeyPress={[Function]}
            tabIndex={0}
            title="Previous Page"
          >
            <button
              className="ant-pagination-item-link"
              disabled={false}
              tabIndex={-1}
              type="button"
            >
              <ForwardRef(LeftOutlined)>
                <AntdIcon
                  icon={
                    Object {
                      "icon": Object {
                        "attrs": Object {
                          "focusable": "false",
                          "viewBox": "64 64 896 896",
                        },
                        "children": Array [
                          Object {
                            "attrs": Object {
                              "d": "M724 218.3V141c0-6.7-7.7-10.4-12.9-6.3L260.3 486.8a31.86 31.86 0 000 50.3l450.8 352.1c5.3 4.1 12.9.4 12.9-6.3v-77.3c0-4.9-2.3-9.6-6.1-12.6l-360-281 360-281.1c3.8-3 6.1-7.7 6.1-12.6z",
                            },
                            "tag": "path",
                          },
                        ],
                        "tag": "svg",
                      },
                      "name": "left",
                      "theme": "outlined",
                    }
                  }
                >
                  <span
                    aria-label="left"
                    className="anticon anticon-left"
                    role="img"
                  >
                    <IconReact
                      icon={
                        Object {
                          "icon": Object {
                            "attrs": Object {
                              "focusable": "false",
                              "viewBox": "64 64 896 896",
                            },
                            "children": Array [
                              Object {
                                "attrs": Object {
                                  "d": "M724 218.3V141c0-6.7-7.7-10.4-12.9-6.3L260.3 486.8a31.86 31.86 0 000 50.3l450.8 352.1c5.3 4.1 12.9.4 12.9-6.3v-77.3c0-4.9-2.3-9.6-6.1-12.6l-360-281 360-281.1c3.8-3 6.1-7.7 6.1-12.6z",
                                },
                                "tag": "path",
                              },
                            ],
                            "tag": "svg",
                          },
                          "name": "left",
                          "theme": "outlined",
                        }
                      }
                    >
                      <svg
                        aria-hidden="true"
                        data-icon="left"
                        fill="currentColor"
                        focusable="false"
                        height="1em"
                        key="svg-left"
                        viewBox="64 64 896 896"
                        width="1em"
                      >
                        <path
                          d="M724 218.3V141c0-6.7-7.7-10.4-12.9-6.3L260.3 486.8a31.86 31.86 0 000 50.3l450.8 352.1c5.3 4.1 12.9.4 12.9-6.3v-77.3c0-4.9-2.3-9.6-6.1-12.6l-360-281 360-281.1c3.8-3 6.1-7.7 6.1-12.6z"
                          key="svg-left-svg-0"
                        />
                      </svg>
                    </IconReact>
                  </span>
                </AntdIcon>
              </ForwardRef(LeftOutlined)>
            </button>
          </li>
          <Pager
            active={false}
            itemRender={[Function]}
            key="1"
            locale={
              Object {
                "items_per_page": "/ page",
                "jump_to": "Go to",
                "jump_to_confirm": "confirm",
                "next_3": "Next 3 Pages",
                "next_5": "Next 5 Pages",
                "next_page": "Next Page",
                "page": "",
                "prev_3": "Previous 3 Pages",
                "prev_5": "Previous 5 Pages",
                "prev_page": "Previous Page",
              }
            }
            onClick={[Function]}
            onKeyPress={[Function]}
            page={1}
            rootPrefixCls="ant-pagination"
            showTitle={true}
          >
            <li
              className="ant-pagination-item ant-pagination-item-1"
              onClick={[Function]}
              onKeyPress={[Function]}
              tabIndex="0"
              title={1}
            >
              <a
                rel="nofollow"
              >
                1
              </a>
            </li>
          </Pager>
          <Pager
            active={true}
            itemRender={[Function]}
            key="2"
            locale={
              Object {
                "items_per_page": "/ page",
                "jump_to": "Go to",
                "jump_to_confirm": "confirm",
                "next_3": "Next 3 Pages",
                "next_5": "Next 5 Pages",
                "next_page": "Next Page",
                "page": "",
                "prev_3": "Previous 3 Pages",
                "prev_5": "Previous 5 Pages",
                "prev_page": "Previous Page",
              }
            }
            onClick={[Function]}
            onKeyPress={[Function]}
            page={2}
            rootPrefixCls="ant-pagination"
            showTitle={true}
          >
            <li
              className="ant-pagination-item ant-pagination-item-2 ant-pagination-item-active"
              onClick={[Function]}
              onKeyPress={[Function]}
              tabIndex="0"
              title={2}
            >
              <a
                rel="nofollow"
              >
                2
              </a>
            </li>
          </Pager>
          <Pager
            active={false}
            itemRender={[Function]}
            key="3"
            locale={
              Object {
                "items_per_page": "/ page",
                "jump_to": "Go to",
                "jump_to_confirm": "confirm",
                "next_3": "Next 3 Pages",
                "next_5": "Next 5 Pages",
                "next_page": "Next Page",
                "page": "",
                "prev_3": "Previous 3 Pages",
                "prev_5": "Previous 5 Pages",
                "prev_page": "Previous Page",
              }
            }
            onClick={[Function]}
            onKeyPress={[Function]}
            page={3}
            rootPrefixCls="ant-pagination"
            showTitle={true}
          >
            <li
              className="ant-pagination-item ant-pagination-item-3"
              onClick={[Function]}
              onKeyPress={[Function]}
              tabIndex="0"
              title={3}
            >
              <a
                rel="nofollow"
              >
                3
              </a>
            </li>
          </Pager>
          <Pager
            active={false}
            itemRender={[Function]}
            key="4"
            locale={
              Object {
                "items_per_page": "/ page",
                "jump_to": "Go to",
                "jump_to_confirm": "confirm",
                "next_3": "Next 3 Pages",
                "next_5": "Next 5 Pages",
                "next_page": "Next Page",
                "page": "",
                "prev_3": "Previous 3 Pages",
                "prev_5": "Previous 5 Pages",
                "prev_page": "Previous Page",
              }
            }
            onClick={[Function]}
            onKeyPress={[Function]}
            page={4}
            rootPrefixCls="ant-pagination"
            showTitle={true}
          >
            <li
              className="ant-pagination-item ant-pagination-item-4"
              onClick={[Function]}
              onKeyPress={[Function]}
              tabIndex="0"
              title={4}
            >
              <a
                rel="nofollow"
              >
                4
              </a>
            </li>
          </Pager>
          <Pager
            active={false}
            className="ant-pagination-item-before-jump-next"
            itemRender={[Function]}
            key="5"
            locale={
              Object {
                "items_per_page": "/ page",
                "jump_to": "Go to",
                "jump_to_confirm": "confirm",
                "next_3": "Next 3 Pages",
                "next_5": "Next 5 Pages",
                "next_page": "Next Page",
                "page": "",
                "prev_3": "Previous 3 Pages",
                "prev_5": "Previous 5 Pages",
                "prev_page": "Previous Page",
              }
            }
            onClick={[Function]}
            onKeyPress={[Function]}
            page={5}
            rootPrefixCls="ant-pagination"
            showTitle={true}
          >
            <li
              className="ant-pagination-item ant-pagination-item-5 ant-pagination-item-before-jump-next"
              onClick={[Function]}
              onKeyPress={[Function]}
              tabIndex="0"
              title={5}
            >
              <a
                rel="nofollow"
              >
                5
              </a>
            </li>
          </Pager>
          <li
            className="ant-pagination-jump-next ant-pagination-jump-next-custom-icon"
            key="next"
            onClick={[Function]}
            onKeyPress={[Function]}
            tabIndex="0"
            title="Next 5 Pages"
          >
            <a
              className="ant-pagination-item-link"
            >
              <div
                className="ant-pagination-item-container"
              >
                <ForwardRef(DoubleRightOutlined)
                  className="ant-pagination-item-link-icon"
                >
                  <AntdIcon
                    className="ant-pagination-item-link-icon"
                    icon={
                      Object {
                        "icon": Object {
                          "attrs": Object {
                            "focusable": "false",
                            "viewBox": "64 64 896 896",
                          },
                          "children": Array [
                            Object {
                              "attrs": Object {
                                "d": "M533.2 492.3L277.9 166.1c-3-3.9-7.7-6.1-12.6-6.1H188c-6.7 0-10.4 7.7-6.3 12.9L447.1 512 181.7 851.1A7.98 7.98 0 00188 864h77.3c4.9 0 9.6-2.3 12.6-6.1l255.3-326.1c9.1-11.7 9.1-27.9 0-39.5zm304 0L581.9 166.1c-3-3.9-7.7-6.1-12.6-6.1H492c-6.7 0-10.4 7.7-6.3 12.9L751.1 512 485.7 851.1A7.98 7.98 0 00492 864h77.3c4.9 0 9.6-2.3 12.6-6.1l255.3-326.1c9.1-11.7 9.1-27.9 0-39.5z",
                              },
                              "tag": "path",
                            },
                          ],
                          "tag": "svg",
                        },
                        "name": "double-right",
                        "theme": "outlined",
                      }
                    }
                  >
                    <span
                      aria-label="double-right"
                      className="anticon anticon-double-right ant-pagination-item-link-icon"
                      role="img"
                    >
                      <IconReact
                        icon={
                          Object {
                            "icon": Object {
                              "attrs": Object {
                                "focusable": "false",
                                "viewBox": "64 64 896 896",
                              },
                              "children": Array [
                                Object {
                                  "attrs": Object {
                                    "d": "M533.2 492.3L277.9 166.1c-3-3.9-7.7-6.1-12.6-6.1H188c-6.7 0-10.4 7.7-6.3 12.9L447.1 512 181.7 851.1A7.98 7.98 0 00188 864h77.3c4.9 0 9.6-2.3 12.6-6.1l255.3-326.1c9.1-11.7 9.1-27.9 0-39.5zm304 0L581.9 166.1c-3-3.9-7.7-6.1-12.6-6.1H492c-6.7 0-10.4 7.7-6.3 12.9L751.1 512 485.7 851.1A7.98 7.98 0 00492 864h77.3c4.9 0 9.6-2.3 12.6-6.1l255.3-326.1c9.1-11.7 9.1-27.9 0-39.5z",
                                  },
                                  "tag": "path",
                                },
                              ],
                              "tag": "svg",
                            },
                            "name": "double-right",
                            "theme": "outlined",
                          }
                        }
                      >
                        <svg
                          aria-hidden="true"
                          data-icon="double-right"
                          fill="currentColor"
                          focusable="false"
                          height="1em"
                          key="svg-double-right"
                          viewBox="64 64 896 896"
                          width="1em"
                        >
                          <path
                            d="M533.2 492.3L277.9 166.1c-3-3.9-7.7-6.1-12.6-6.1H188c-6.7 0-10.4 7.7-6.3 12.9L447.1 512 181.7 851.1A7.98 7.98 0 00188 864h77.3c4.9 0 9.6-2.3 12.6-6.1l255.3-326.1c9.1-11.7 9.1-27.9 0-39.5zm304 0L581.9 166.1c-3-3.9-7.7-6.1-12.6-6.1H492c-6.7 0-10.4 7.7-6.3 12.9L751.1 512 485.7 851.1A7.98 7.98 0 00492 864h77.3c4.9 0 9.6-2.3 12.6-6.1l255.3-326.1c9.1-11.7 9.1-27.9 0-39.5z"
                            key="svg-double-right-svg-0"
                          />
                        </svg>
                      </IconReact>
                    </span>
                  </AntdIcon>
                </ForwardRef(DoubleRightOutlined)>
                <span
                  className="ant-pagination-item-ellipsis"
                >
                  •••
                </span>
              </div>
            </a>
          </li>
          <Pager
            active={false}
            itemRender={[Function]}
            key="39"
            last={true}
            locale={
              Object {
                "items_per_page": "/ page",
                "jump_to": "Go to",
                "jump_to_confirm": "confirm",
                "next_3": "Next 3 Pages",
                "next_5": "Next 5 Pages",
                "next_page": "Next Page",
                "page": "",
                "prev_3": "Previous 3 Pages",
                "prev_5": "Previous 5 Pages",
                "prev_page": "Previous Page",
              }
            }
            onClick={[Function]}
            onKeyPress={[Function]}
            page={39}
            rootPrefixCls="ant-pagination"
            showTitle={true}
          >
            <li
              className="ant-pagination-item ant-pagination-item-39"
              onClick={[Function]}
              onKeyPress={[Function]}
              tabIndex="0"
              title={39}
            >
              <a
                rel="nofollow"
              >
                39
              </a>
            </li>
          </Pager>
          <li
            aria-disabled={false}
            className="ant-pagination-next"
            onClick={[Function]}
            onKeyPress={[Function]}
            tabIndex={0}
            title="Next Page"
          >
            <button
              className="ant-pagination-item-link"
              disabled={false}
              tabIndex={-1}
              type="button"
            >
              <ForwardRef(RightOutlined)>
                <AntdIcon
                  icon={
                    Object {
                      "icon": Object {
                        "attrs": Object {
                          "focusable": "false",
                          "viewBox": "64 64 896 896",
                        },
                        "children": Array [
                          Object {
                            "attrs": Object {
                              "d": "M765.7 486.8L314.9 134.7A7.97 7.97 0 00302 141v77.3c0 4.9 2.3 9.6 6.1 12.6l360 281.1-360 281.1c-3.9 3-6.1 7.7-6.1 12.6V883c0 6.7 7.7 10.4 12.9 6.3l450.8-352.1a31.96 31.96 0 000-50.4z",
                            },
                            "tag": "path",
                          },
                        ],
                        "tag": "svg",
                      },
                      "name": "right",
                      "theme": "outlined",
                    }
                  }
                >
                  <span
                    aria-label="right"
                    className="anticon anticon-right"
                    role="img"
                  >
                    <IconReact
                      icon={
                        Object {
                          "icon": Object {
                            "attrs": Object {
                              "focusable": "false",
                              "viewBox": "64 64 896 896",
                            },
                            "children": Array [
                              Object {
                                "attrs": Object {
                                  "d": "M765.7 486.8L314.9 134.7A7.97 7.97 0 00302 141v77.3c0 4.9 2.3 9.6 6.1 12.6l360 281.1-360 281.1c-3.9 3-6.1 7.7-6.1 12.6V883c0 6.7 7.7 10.4 12.9 6.3l450.8-352.1a31.96 31.96 0 000-50.4z",
                                },
                                "tag": "path",
                              },
                            ],
                            "tag": "svg",
                          },
                          "name": "right",
                          "theme": "outlined",
                        }
                      }
                    >
                      <svg
                        aria-hidden="true"
                        data-icon="right"
                        fill="currentColor"
                        focusable="false"
                        height="1em"
                        key="svg-right"
                        viewBox="64 64 896 896"
                        width="1em"
                      >
                        <path
                          d="M765.7 486.8L314.9 134.7A7.97 7.97 0 00302 141v77.3c0 4.9 2.3 9.6 6.1 12.6l360 281.1-360 281.1c-3.9 3-6.1 7.7-6.1 12.6V883c0 6.7 7.7 10.4 12.9 6.3l450.8-352.1a31.96 31.96 0 000-50.4z"
                          key="svg-right-svg-0"
                        />
                      </svg>
                    </IconReact>
                  </span>
                </AntdIcon>
              </ForwardRef(RightOutlined)>
            </button>
          </li>
          <Options
            changeSize={[Function]}
            current={2}
            goButton={false}
            locale={
              Object {
                "items_per_page": "/ page",
                "jump_to": "Go to",
                "jump_to_confirm": "confirm",
                "next_3": "Next 3 Pages",
                "next_5": "Next 5 Pages",
                "next_page": "Next Page",
                "page": "",
                "prev_3": "Previous 3 Pages",
                "prev_5": "Previous 5 Pages",
                "prev_page": "Previous Page",
              }
            }
            pageSize={100}
            pageSizeOptions={
              Array [
                "10",
                "20",
                "50",
                "100",
              ]
            }
            quickGo={null}
            rootPrefixCls="ant-pagination"
            selectComponentClass={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "OptGroup": [Function],
                "Option": [Function],
                "SECRET_COMBOBOX_MODE_DO_NOT_USE": "SECRET_COMBOBOX_MODE_DO_NOT_USE",
                "render": [Function],
              }
            }
            selectPrefixCls="ant-select"
          >
            <li
              className="ant-pagination-options"
            >
              <ForwardRef(InternalSelect)
                className="ant-pagination-options-size-changer"
                dropdownMatchSelectWidth={false}
                getPopupContainer={[Function]}
                onChange={[Function]}
                optionLabelProp="children"
                prefixCls="ant-select"
                showSearch={false}
                value="100"
              >
                <Select
                  className="ant-pagination-options-size-changer"
                  clearIcon={<ForwardRef(CloseCircleFilled) />}
                  dropdownClassName=""
                  dropdownMatchSelectWidth={false}
                  getPopupContainer={[Function]}
                  inputIcon={[Function]}
                  listHeight={256}
                  listItemHeight={24}
                  menuItemSelectedIcon={null}
                  notFoundContent={
                    <Context.Consumer>
                      [Function]
                    </Context.Consumer>
                  }
                  onChange={[Function]}
                  optionLabelProp="children"
                  prefixCls="ant-select"
                  removeIcon={<ForwardRef(CloseOutlined) />}
                  showSearch={false}
                  transitionName="ant-slide-up"
                  value="100"
                >
                  <ForwardRef(Select)
                    className="ant-pagination-options-size-changer"
                    clearIcon={<ForwardRef(CloseCircleFilled) />}
                    dropdownClassName=""
                    dropdownMatchSelectWidth={false}
                    getPopupContainer={[Function]}
                    inputIcon={[Function]}
                    listHeight={256}
                    listItemHeight={24}
                    menuItemSelectedIcon={null}
                    notFoundContent={
                      <Context.Consumer>
                        [Function]
                      </Context.Consumer>
                    }
                    onChange={[Function]}
                    optionLabelProp="children"
                    prefixCls="ant-select"
                    removeIcon={<ForwardRef(CloseOutlined) />}
                    showSearch={false}
                    transitionName="ant-slide-up"
                    value="100"
                  >
                    <div
                      className="ant-select ant-pagination-options-size-changer ant-select-single ant-select-show-arrow"
                      onBlur={[Function]}
                      onFocus={[Function]}
                      onKeyDown={[Function]}
                      onKeyUp={[Function]}
                      onMouseDown={[Function]}
                    >
                      <SelectTrigger
                        containerWidth={null}
                        dropdownClassName=""
                        dropdownMatchSelectWidth={false}
                        empty={false}
                        getPopupContainer={[Function]}
                        getTriggerDOMNode={[Function]}
                        popupElement={
                          <OptionList
                            childrenAsData={true}
                            defaultActiveFirstOption={true}
                            flattenOptions={
                              Array [
                                Object {
                                  "data": Object {
                                    "children": "10 / page",
                                    "key": "0",
                                    "value": "10",
                                  },
                                  "groupOption": false,
                                  "key": "0",
                                },
                                Object {
                                  "data": Object {
                                    "children": "20 / page",
                                    "key": "1",
                                    "value": "20",
                                  },
                                  "groupOption": false,
                                  "key": "1",
                                },
                                Object {
                                  "data": Object {
                                    "children": "50 / page",
                                    "key": "2",
                                    "value": "50",
                                  },
                                  "groupOption": false,
                                  "key": "2",
                                },
                                Object {
                                  "data": Object {
                                    "children": "100 / page",
                                    "key": "3",
                                    "value": "100",
                                  },
                                  "groupOption": false,
                                  "key": "3",
                                },
                              ]
                            }
                            height={256}
                            id="rc_select_TEST_OR_SSR"
                            itemHeight={24}
                            menuItemSelectedIcon={null}
                            multiple={false}
                            notFoundContent={
                              <Context.Consumer>
                                [Function]
                              </Context.Consumer>
                            }
                            onActiveValue={[Function]}
                            onMouseEnter={[Function]}
                            onSelect={[Function]}
                            onToggleOpen={[Function]}
                            options={
                              Array [
                                Object {
                                  "children": "10 / page",
                                  "key": "0",
                                  "value": "10",
                                },
                                Object {
                                  "children": "20 / page",
                                  "key": "1",
                                  "value": "20",
                                },
                                Object {
                                  "children": "50 / page",
                                  "key": "2",
                                  "value": "50",
                                },
                                Object {
                                  "children": "100 / page",
                                  "key": "3",
                                  "value": "100",
                                },
                              ]
                            }
                            prefixCls="ant-select"
                            searchValue=""
                            values={
                              Set {
                                "100",
                              }
                            }
                            virtual={false}
                          />
                        }
                        prefixCls="ant-select"
                        transitionName="ant-slide-up"
                      >
                        <Trigger
                          action={Array []}
                          afterPopupVisibleChange={[Function]}
                          autoDestroy={false}
                          blurDelay={0.15}
                          builtinPlacements={
                            Object {
                              "bottomLeft": Object {
                                "offset": Array [
                                  0,
                                  4,
                                ],
                                "overflow": Object {
                                  "adjustX": 0,
                                  "adjustY": 1,
                                },
                                "points": Array [
                                  "tl",
                                  "bl",
                                ],
                              },
                              "bottomRight": Object {
                                "offset": Array [
                                  0,
                                  4,
                                ],
                                "overflow": Object {
                                  "adjustX": 0,
                                  "adjustY": 1,
                                },
                                "points": Array [
                                  "tr",
                                  "br",
                                ],
                              },
                              "topLeft": Object {
                                "offset": Array [
                                  0,
                                  -4,
                                ],
                                "overflow": Object {
                                  "adjustX": 0,
                                  "adjustY": 1,
                                },
                                "points": Array [
                                  "bl",
                                  "tl",
                                ],
                              },
                              "topRight": Object {
                                "offset": Array [
                                  0,
                                  -4,
                                ],
                                "overflow": Object {
                                  "adjustX": 0,
                                  "adjustY": 1,
                                },
                                "points": Array [
                                  "br",
                                  "tr",
                                ],
                              },
                            }
                          }
                          defaultPopupVisible={false}
                          destroyPopupOnHide={false}
                          focusDelay={0}
                          getDocument={[Function]}
                          getPopupClassNameFromAlign={[Function]}
                          getPopupContainer={[Function]}
                          getTriggerDOMNode={[Function]}
                          hideAction={Array []}
                          mask={false}
                          maskClosable={true}
                          mouseEnterDelay={0}
                          mouseLeaveDelay={0.1}
                          onPopupAlign={[Function]}
                          onPopupVisibleChange={[Function]}
                          popup={
                            <div>
                              <OptionList
                                childrenAsData={true}
                                defaultActiveFirstOption={true}
                                flattenOptions={
                                  Array [
                                    Object {
                                      "data": Object {
                                        "children": "10 / page",
                                        "key": "0",
                                        "value": "10",
                                      },
                                      "groupOption": false,
                                      "key": "0",
                                    },
                                    Object {
                                      "data": Object {
                                        "children": "20 / page",
                                        "key": "1",
                                        "value": "20",
                                      },
                                      "groupOption": false,
                                      "key": "1",
                                    },
                                    Object {
                                      "data": Object {
                                        "children": "50 / page",
                                        "key": "2",
                                        "value": "50",
                                      },
                                      "groupOption": false,
                                      "key": "2",
                                    },
                                    Object {
                                      "data": Object {
                                        "children": "100 / page",
                                        "key": "3",
                                        "value": "100",
                                      },
                                      "groupOption": false,
                                      "key": "3",
                                    },
                                  ]
                                }
                                height={256}
                                id="rc_select_TEST_OR_SSR"
                                itemHeight={24}
                                menuItemSelectedIcon={null}
                                multiple={false}
                                notFoundContent={
                                  <Context.Consumer>
                                    [Function]
                                  </Context.Consumer>
                                }
                                onActiveValue={[Function]}
                                onMouseEnter={[Function]}
                                onSelect={[Function]}
                                onToggleOpen={[Function]}
                                options={
                                  Array [
                                    Object {
                                      "children": "10 / page",
                                      "key": "0",
                                      "value": "10",
                                    },
                                    Object {
                                      "children": "20 / page",
                                      "key": "1",
                                      "value": "20",
                                    },
                                    Object {
                                      "children": "50 / page",
                                      "key": "2",
                                      "value": "50",
                                    },
                                    Object {
                                      "children": "100 / page",
                                      "key": "3",
                                      "value": "100",
                                    },
                                  ]
                                }
                                prefixCls="ant-select"
                                searchValue=""
                                values={
                                  Set {
                                    "100",
                                  }
                                }
                                virtual={false}
                              />
                            </div>
                          }
                          popupAlign={Object {}}
                          popupClassName=""
                          popupPlacement="bottomLeft"
                          popupStyle={
                            Object {
                              "minWidth": null,
                            }
                          }
                          popupTransitionName="ant-slide-up"
                          prefixCls="ant-select-dropdown"
                          showAction={Array []}
                        >
                          <Selector
                            accessibilityIndex={0}
                            activeValue={null}
                            className="ant-pagination-options-size-changer"
                            clearIcon={<ForwardRef(CloseCircleFilled) />}
                            domRef={
                              Object {
                                "current": <div
                                  class="ant-select-selector"
                                >
                                  <span
                                    class="ant-select-selection-search"
                                  >
                                    <input
                                      aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                      aria-autocomplete="list"
                                      aria-controls="rc_select_TEST_OR_SSR_list"
                                      aria-haspopup="listbox"
                                      aria-owns="rc_select_TEST_OR_SSR_list"
                                      autocomplete="off"
                                      class="ant-select-selection-search-input"
                                      id="rc_select_TEST_OR_SSR"
                                      readonly=""
                                      role="combobox"
                                      style="opacity: 0;"
                                      type="search"
                                      unselectable="on"
                                      value=""
                                    />
                                  </span>
                                  <span
                                    class="ant-select-selection-item"
                                    title="100 / page"
                                  >
                                    100 / page
                                  </span>
                                </div>,
                              }
                            }
                            dropdownClassName=""
                            dropdownMatchSelectWidth={false}
                            getPopupContainer={[Function]}
                            id="rc_select_TEST_OR_SSR"
                            inputElement={null}
                            inputIcon={[Function]}
                            key="trigger"
                            listHeight={256}
                            listItemHeight={24}
                            menuItemSelectedIcon={null}
                            multiple={false}
                            notFoundContent={
                              <Context.Consumer>
                                [Function]
                              </Context.Consumer>
                            }
                            onChange={[Function]}
                            onSearch={[Function]}
                            onSearchSubmit={[Function]}
                            onSelect={[Function]}
                            onToggleOpen={[Function]}
                            optionLabelProp="children"
                            prefixCls="ant-select"
                            removeIcon={<ForwardRef(CloseOutlined) />}
                            searchValue=""
                            showSearch={false}
                            tokenWithEnter={false}
                            transitionName="ant-slide-up"
                            value="100"
                            values={
                              Array [
                                Object {
                                  "disabled": undefined,
                                  "key": "100",
                                  "label": "100 / page",
                                  "value": "100",
                                },
                              ]
                            }
                          >
                            <div
                              className="ant-select-selector"
                              onClick={[Function]}
                              onMouseDown={[Function]}
                            >
                              <SingleSelector
                                accessibilityIndex={0}
                                activeValue={null}
                                className="ant-pagination-options-size-changer"
                                clearIcon={<ForwardRef(CloseCircleFilled) />}
                                domRef={
                                  Object {
                                    "current": <div
                                      class="ant-select-selector"
                                    >
                                      <span
                                        class="ant-select-selection-search"
                                      >
                                        <input
                                          aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                          aria-autocomplete="list"
                                          aria-controls="rc_select_TEST_OR_SSR_list"
                                          aria-haspopup="listbox"
                                          aria-owns="rc_select_TEST_OR_SSR_list"
                                          autocomplete="off"
                                          class="ant-select-selection-search-input"
                                          id="rc_select_TEST_OR_SSR"
                                          readonly=""
                                          role="combobox"
                                          style="opacity: 0;"
                                          type="search"
                                          unselectable="on"
                                          value=""
                                        />
                                      </span>
                                      <span
                                        class="ant-select-selection-item"
                                        title="100 / page"
                                      >
                                        100 / page
                                      </span>
                                    </div>,
                                  }
                                }
                                dropdownClassName=""
                                dropdownMatchSelectWidth={false}
                                getPopupContainer={[Function]}
                                id="rc_select_TEST_OR_SSR"
                                inputElement={null}
                                inputIcon={[Function]}
                                inputRef={
                                  Object {
                                    "current": <input
                                      aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                      aria-autocomplete="list"
                                      aria-controls="rc_select_TEST_OR_SSR_list"
                                      aria-haspopup="listbox"
                                      aria-owns="rc_select_TEST_OR_SSR_list"
                                      autocomplete="off"
                                      class="ant-select-selection-search-input"
                                      id="rc_select_TEST_OR_SSR"
                                      readonly=""
                                      role="combobox"
                                      style="opacity: 0;"
                                      type="search"
                                      unselectable="on"
                                      value=""
                                    />,
                                  }
                                }
                                listHeight={256}
                                listItemHeight={24}
                                menuItemSelectedIcon={null}
                                multiple={false}
                                notFoundContent={
                                  <Context.Consumer>
                                    [Function]
                                  </Context.Consumer>
                                }
                                onChange={[Function]}
                                onInputChange={[Function]}
                                onInputCompositionEnd={[Function]}
                                onInputCompositionStart={[Function]}
                                onInputKeyDown={[Function]}
                                onInputMouseDown={[Function]}
                                onInputPaste={[Function]}
                                onSearch={[Function]}
                                onSearchSubmit={[Function]}
                                onSelect={[Function]}
                                onToggleOpen={[Function]}
                                optionLabelProp="children"
                                prefixCls="ant-select"
                                removeIcon={<ForwardRef(CloseOutlined) />}
                                searchValue=""
                                showSearch={false}
                                tokenWithEnter={false}
                                transitionName="ant-slide-up"
                                value="100"
                                values={
                                  Array [
                                    Object {
                                      "disabled": undefined,
                                      "key": "100",
                                      "label": "100 / page",
                                      "value": "100",
                                    },
                                  ]
                                }
                              >
                                <span
                                  className="ant-select-selection-search"
                                >
                                  <Input
                                    accessibilityIndex={0}
                                    attrs={Object {}}
                                    editable={false}
                                    id="rc_select_TEST_OR_SSR"
                                    inputElement={null}
                                    onChange={[Function]}
                                    onCompositionEnd={[Function]}
                                    onCompositionStart={[Function]}
                                    onKeyDown={[Function]}
                                    onMouseDown={[Function]}
                                    onPaste={[Function]}
                                    prefixCls="ant-select"
                                    value=""
                                  >
                                    <input
                                      aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                      aria-autocomplete="list"
                                      aria-controls="rc_select_TEST_OR_SSR_list"
                                      aria-haspopup="listbox"
                                      aria-owns="rc_select_TEST_OR_SSR_list"
                                      autoComplete="off"
                                      className="ant-select-selection-search-input"
                                      id="rc_select_TEST_OR_SSR"
                                      onChange={[Function]}
                                      onCompositionEnd={[Function]}
                                      onCompositionStart={[Function]}
                                      onKeyDown={[Function]}
                                      onMouseDown={[Function]}
                                      onPaste={[Function]}
                                      readOnly={true}
                                      role="combobox"
                                      style={
                                        Object {
                                          "opacity": 0,
                                        }
                                      }
                                      type="search"
                                      unselectable="on"
                                      value=""
                                    />
                                  </Input>
                                </span>
                                <span
                                  className="ant-select-selection-item"
                                  title="100 / page"
                                >
                                  100 / page
                                </span>
                              </SingleSelector>
                            </div>
                          </Selector>
                        </Trigger>
                      </SelectTrigger>
                      <TransBtn
                        className="ant-select-arrow"
                        customizeIcon={[Function]}
                        customizeIconProps={
                          Object {
                            "focused": false,
                            "loading": undefined,
                            "open": undefined,
                            "searchValue": "",
                            "showSearch": false,
                          }
                        }
                      >
                        <span
                          aria-hidden={true}
                          className="ant-select-arrow"
                          onMouseDown={[Function]}
                          style={
                            Object {
                              "WebkitUserSelect": "none",
                              "userSelect": "none",
                            }
                          }
                          unselectable="on"
                        >
                          <ForwardRef(DownOutlined)
                            className="ant-select-suffix"
                          >
                            <AntdIcon
                              className="ant-select-suffix"
                              icon={
                                Object {
                                  "icon": Object {
                                    "attrs": Object {
                                      "focusable": "false",
                                      "viewBox": "64 64 896 896",
                                    },
                                    "children": Array [
                                      Object {
                                        "attrs": Object {
                                          "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                        },
                                        "tag": "path",
                                      },
                                    ],
                                    "tag": "svg",
                                  },
                                  "name": "down",
                                  "theme": "outlined",
                                }
                              }
                            >
                              <span
                                aria-label="down"
                                className="anticon anticon-down ant-select-suffix"
                                role="img"
                              >
                                <IconReact
                                  icon={
                                    Object {
                                      "icon": Object {
                                        "attrs": Object {
                                          "focusable": "false",
                                          "viewBox": "64 64 896 896",
                                        },
                                        "children": Array [
                                          Object {
                                            "attrs": Object {
                                              "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                            },
                                            "tag": "path",
                                          },
                                        ],
                                        "tag": "svg",
                                      },
                                      "name": "down",
                                      "theme": "outlined",
                                    }
                                  }
                                >
                                  <svg
                                    aria-hidden="true"
                                    data-icon="down"
                                    fill="currentColor"
                                    focusable="false"
                                    height="1em"
                                    key="svg-down"
                                    viewBox="64 64 896 896"
                                    width="1em"
                                  >
                                    <path
                                      d="M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z"
                                      key="svg-down-svg-0"
                                    />
                                  </svg>
                                </IconReact>
                              </span>
                            </AntdIcon>
                          </ForwardRef(DownOutlined)>
                        </span>
                      </TransBtn>
                    </div>
                  </ForwardRef(Select)>
                </Select>
              </ForwardRef(InternalSelect)>
            </li>
          </Options>
        </ul>
      </Pagination>
    </LocaleReceiver>
  </Pagination>
</PaginationRow>
`;
